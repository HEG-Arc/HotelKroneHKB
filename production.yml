version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_mariadb: {}
  production_matomo: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: hotelkrone_production_django
    depends_on:
      - postgres
      - redis
    volumes:
     - /home/hkb/media:/app/hotelkrone/media
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: hotelkrone_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: hotelkrone_production_nginx
    volumes:
     - /home/hkb/media:/usr/share/nginx/html:ro
     - production_matomo:/usr/share/nginx/htmlmatomo:ro

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: hotelkrone_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"

  redis:
    image: redis:5.0

  restreamer:
    image: datarhei/restreamer
    ports:
     - "0.0.0.0:1935:1935"
    env_file:
     - ./.envs/.production/.restreamer

  mariadb:
    image: mariadb
    command: --max-allowed-packet=64MB
    restart: always
    volumes:
      - production_mariadb:/var/lib/mysql
    env_file:
      - ./.envs/.production/.matomo

  matomo:
    image: matomo
    restart: always
    links:
      - mariadb
    volumes:
      - production_matomo:/var/www/html
    environment:
      - MATOMO_DATABASE_HOST=mariadb
    env_file:
      - ./.envs/.production/.matomo
